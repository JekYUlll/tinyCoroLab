#ifndef CONFIG_H
#define CONFIG_H

// #define VERSION_MAJOR @PROJECT_VERSION_MAJOR @
// #define VERSION_MINOR @PROJECT_VERSION_MINOR @
// #define INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@"

#include "stddef.h"
#include "stdint.h"

#include "coro/detail/types.hpp"

#define SOURCE_DIR "@PROJECT_SOURCE_DIR@"

namespace coro::config
{

// ========================== log configuration =============================
// #define TRACE 0
// #define DEBUG 1
// #define INFO 2
// #define WARN 3
// #define ERR 4
// #define CRITICAL 5
// #define OFF 6

// #define LOGTOFILE
#define LOG_LEVEL info
#define USEMUTEX

constexpr const char* kLogFileName = "temp/logs/coro.log";
constexpr int64_t     kFlushDura   = 3; // seconds

// =========================== cpu configuration ============================
constexpr size_t kCacheLineSize = 64; // alignas(config::kCacheLineSize)

// ========================== uring configuration ===========================
constexpr unsigned int kEntryLength = 10240;

// uncomment below to open uring pooling mode, but don't do that, this mode is not currently fully supported
// #define ENABLE_POOLING
constexpr unsigned int kSqthreadIdle = 2000; // millseconds

// ===================== execute engine configuration =======================
using ctx_id                                                = uint32_t;
constexpr size_t                          kQueCap           = 10240;
constexpr coro::detail::dispatch_strategy kDispatchStrategy = coro::detail::dispatch_strategy::round_robin;
inline bool                               kLongRunMode      = true;

// =========================== net configuration ============================
constexpr int kDefaultPort = 8000;
constexpr int kBacklog     = 5;
}; // namespace coro::config
#endif // CONFIG_H
